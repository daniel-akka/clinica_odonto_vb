<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SaveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>159, 51</value>
  </metadata>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>296, 51</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_importar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Z4jr+eL/2f4Lzc2OMQfpXGMAAAAASUVORK5CYII=
</value>
  </data>
</root>